buildscript {
    ext.kotlin_version = '1.5.31'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id("org.jetbrains.intellij") version "0.7.3"
}
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'jacoco'

group 'com.intuit.intellij'

intellij {
    version '2021.2.2'
    pluginName rootProject.name
    /* set compatibility range to be *from* IntelliJ version
    and not constrict to specific major build */
    updateSinceUntilBuild false
    plugins = ['java']
}

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        java { srcDirs 'src/main/java', 'gen'
            compileJava {
                sourceCompatibility = 11
                targetCompatibility = 11
            }
        }
        kotlin.srcDir 'src/main/kotlin'
        resources.srcDir 'src/main/resources'
    }
    test {
        kotlin.srcDir 'src/test/kotlin'
    }
}


task compileProcessBuilder(type: JavaCompile) {
    source = sourceSets.main.java.srcDirs
    include 'CmdProcessBuilder.java'
    classpath = sourceSets.main.compileClasspath
}

compileProcessBuilder.options.compilerArgs = ["-sourcepath", "$projectDir/src/main/java/com/intuit/ddb"]

// create a fat jar
jar {
    manifest {
        attributes "Main-Class": "com.intuit.ddb"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


dependencies {
    compileProcessBuilder
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test
    reports {
        html {
            enabled false
        }
        xml {
            enabled true
            destination file("${buildDir}/reports/report.xml")
        }
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.pinterest:ktlint:0.42.1"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style"
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations"
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

